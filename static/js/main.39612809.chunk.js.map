{"version":3,"sources":["WeatherApp/Weather.js","index.js"],"names":["WeatherApp","useState","input","setInput","error","setError","weather","setWeather","inputRef","useRef","useEffect","current","focus","className","type","placeholder","value","onChange","e","target","ref","onKeyPress","key","fetch","then","res","json","result","console","log","catch","err","main","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","getDateDetails","Date","Math","round","temp","wind","speed","deg","temp_max","temp_min","length","ReactDOM","render","document","getElementById"],"mappings":"uLAoGeA,MAjGf,WAAuB,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEQF,mBAAS,IAFjB,mBAEXG,EAFW,KAEJC,EAFI,OAGYJ,mBAAS,IAHrB,mBAGXK,EAHW,KAGFC,EAHE,KAMZC,EAAWC,iBAAO,MAoCxB,OAhCAC,qBAAU,WACNF,EAASG,QAAQC,UACnB,IA+BE,qBAAKC,UAAU,YAAf,SACA,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,SAAb,8BAEA,qBAAKA,UAAU,YAAf,SACG,uBAAOC,KAAK,OAAOC,YAAY,0BAA0BF,UAAU,cAAcG,MAAOd,EAAOe,SAzCtF,SAACC,GACjBf,EAASe,EAAEC,OAAOH,QAwC2GI,IAAKZ,EAAUa,WAtB/H,SAACH,GACD,UAAVA,EAAEI,KACDC,MAAM,qDAAD,OAAsDrB,EAAtD,yDACJsB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFpB,EAAWoB,GACXxB,EAAS,IACTyB,QAAQC,IAAIF,MAEfG,OAAM,SAAAC,GACH1B,EAAS,4BAgBY,qBAAjBC,EAAQ0B,KAAuB,sBAAKnB,UAAU,eAAf,UAGnC,qBAAKA,UAAU,gBAAf,SACG,oBAAGA,UAAU,OAAb,UAAoB,cAAC,IAAD,CAAgBA,UAAU,kBAAmBP,EAAQ2B,KAAzE,KAAgF,sBAAMpB,UAAU,UAAhB,SAA2BP,EAAQ4B,IAAIC,eAI1H,qBAAKtB,UAAU,YAAf,SACG,mBAAGA,UAAU,OAAb,SA9CQ,SAACuB,GACpB,IAEIC,EADO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAJS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cACb,MAAM,GAAN,OAAUP,EAAV,aAAkBE,EAAlB,YAA0BE,EAA1B,YAAmCE,GAuCHE,CAAe,IAAIC,UAI3C,qBAAKjC,UAAU,YAAf,SACI,oBAAGA,UAAU,YAAb,UAA0BkC,KAAKC,MAAM1C,EAAQ0B,KAAKiB,MAAlD,IAAyD,sBAAMpC,UAAU,OAAhB,wBAI7D,qBAAKA,UAAU,QAAf,SAAwBP,EAAQA,QAAQ,GAAG0B,OAG3C,qBAAKnB,UAE6B,UAA5BP,EAAQA,QAAQ,GAAG0B,KAAoB,wBAA0B,4BAKvE,sBAAKnB,UAAU,YAAf,UACG,uBAAMA,UAAU,aAAhB,yBAA0CP,EAAQ4C,KAAKC,SAD1D,OAC2E,uBAAMtC,UAAU,WAAhB,uBAAsCP,EAAQ4C,KAAKE,UAI9H,sBAAKvC,UAAU,eAAf,UACI,uBAAMA,UAAU,WAAhB,uBAAsCkC,KAAKC,MAAM1C,EAAQ0B,KAAKqB,UAA9D,WADJ,MACwF,uBAAMxC,UAAU,WAAhB,uBAAsCkC,KAAKC,MAAM1C,EAAQ0B,KAAKsB,UAA9D,iBAEnF,KAELhD,EAAQiD,QAAQ,EAAI,4BAAInD,IAAa,WCxFrDoD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.39612809.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport { BiLocationPlus } from \"react-icons/bi\";\r\n\r\nfunction WeatherApp() {\r\n    const [input, setInput] = useState('');\r\n    const [error, setError] = useState('')\r\n    const [weather, setWeather] = useState({});\r\n\r\n    //focus input field...\r\n    const inputRef = useRef(null);\r\n    const changeInput = (e) => {\r\n        setInput(e.target.value)\r\n    };\r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    },[]);\r\n\r\n    //getting Date info....\r\n    const getDateDetails = (d) => {\r\n        let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ];\r\n        let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n        return `${day}, ${date} ${month} ${year}`\r\n    }\r\n\r\n    //fetching data from API...\r\n    const keyPress = (e) => {\r\n        if(e.key === 'Enter') {\r\n            fetch(`https://api.openweathermap.org/data/2.5/weather?q=${input}&units=metric&APPID=f81a225131b81dba99d6c46cc0023d66`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setWeather(result);\r\n                setInput('');\r\n                console.log(result)\r\n            } )\r\n            .catch(err => {\r\n                setError('Invalid Location')\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"main warm\">\r\n        <div className='conatiner'>\r\n            <p className=\"header\">Weather forecast</p>\r\n            {/** Input field **/}\r\n            <div className=\"input-box\">\r\n               <input type=\"text\" placeholder=\"search your location...\" className=\"input-field\" value={input} onChange={changeInput} ref={inputRef} onKeyPress={keyPress} />\r\n            </div>\r\n\r\n            {/** Weather Information **/}\r\n            {typeof weather.main !== 'undefined' ? <div className=\"weather-info\">\r\n            \r\n                {/** LOCATION INFO **/}\r\n                <div className=\"location-info\">\r\n                   <p className=\"city\"><BiLocationPlus className=\"location-icon\" />{weather.name}, <span className=\"country\">{weather.sys.country}</span></p>\r\n                </div>\r\n\r\n                {/** DATE INFO **/}\r\n                <div className=\"date-info\">\r\n                   <p className=\"date\">{getDateDetails(new Date())}</p>\r\n                </div>\r\n\r\n                {/** TEMPERATURE INFO **/}\r\n                <div className=\"temp-info\">\r\n                    <p className=\"temp-info\">{Math.round(weather.main.temp)} <span className=\"unit\">°c</span></p>\r\n                </div>\r\n\r\n                {/** CLOUD INFO **/}\r\n                <div className=\"cloud\">{weather.weather[0].main}</div>\r\n\r\n                {/** CLOUD icons **/}\r\n                <div className=\r\n                {\r\n                    ((weather.weather[0].main === 'Clear') ? 'weather-icon sun-icon' : 'weather-icon cloud-icon')\r\n                }\r\n                ></div>\r\n\r\n                {/** WIND INFO **/}\r\n                <div className=\"wind-info\">\r\n                   <span className=\"wind-speed\">Wind-Speed: {weather.wind.speed}</span> || <span className=\"wind-deg\">Wind-Deg: {weather.wind.deg}</span>\r\n                </div>\r\n\r\n                {/** MAX and MIN TEMPERATUE **/}\r\n                <div className=\"max-min-temp\">\r\n                    <span className=\"max-temp\">Max-temp: {Math.round(weather.main.temp_max)}°c</span>,  <span className=\"min-temp\">Min-temp: {Math.round(weather.main.temp_min)}°c</span>\r\n                </div>\r\n            </div> : null}\r\n            {\r\n                weather.length<=0 ? <p>{error}</p> : null\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './WeatherApp/style.css';\nimport Render from './WeatherApp/Weather';\n\nReactDOM.render(\n  <Render />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}